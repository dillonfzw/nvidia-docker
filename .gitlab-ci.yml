variables:
    REPOSITORY: "${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}"
    OS: "${CI_COMMIT_REF_NAME}"
    QEMU_PPC64LE: "/usr/bin/qemu-ppc64le-static"

before_script:
    - if [[ ! -f /proc/sys/fs/binfmt_misc/ppc64le ]]; then
          docker run --rm --privileged multiarch/qemu-user-static:register;
      fi
    - docker login -u "${REGISTRY_USER}" -p "${REGISTRY_TOKEN}"

stages:
    - cuda
    - cudnn

.cuda_template: &cuda_definition
    stage: cuda
    script:
    - VERSION="${CI_JOB_NAME:1}"
    - docker build --pull -t "${REPOSITORY}:${VERSION}-runtime-${OS}"
                   --volume "${QEMU_PPC64LE}:${QEMU_PPC64LE}"
                   --label "com.nvidia.build.ref=${CI_COMMIT_SHA}"
                   --label "com.nvidia.build.id=${CI_JOB_ID}"
                   "${VERSION}/runtime"
    - docker push "${REPOSITORY}:${VERSION}-runtime-${OS}"
    - docker build -t "${REPOSITORY}:${VERSION}-devel-${OS}"
                   --volume "${QEMU_PPC64LE}:${QEMU_PPC64LE}"
                   "${VERSION}/devel"
    - docker push "${REPOSITORY}:${VERSION}-devel-${OS}"
    - if [[ "${NO_OS_SUFFIX}" == true ]]; then
          docker tag "${REPOSITORY}:${VERSION}-runtime-${OS}" "${REPOSITORY}:${VERSION}-runtime";
          docker push "${REPOSITORY}:${VERSION}-runtime";
          docker tag "${REPOSITORY}:${VERSION}-devel-${OS}" "${REPOSITORY}:${VERSION}-devel";
          docker push "${REPOSITORY}:${VERSION}-devel";
      fi
    - if [[ "${LATEST}" == true ]]; then
          docker tag "${REPOSITORY}:${VERSION}-devel-${OS}" "${REPOSITORY}:latest";
          docker push "${REPOSITORY}:latest";
      fi

.cudnn_template: &cudnn_definition
    stage: cudnn
    script:
    - VERSION="${CI_JOB_NAME:1}"
    - CUDA_VERSION="${CI_JOB_NAME:1:3}"
    - CUDNN_VERSION="${CI_JOB_NAME:5}"
    - docker build --pull -t "${REPOSITORY}:${VERSION}-runtime-${OS}"
                   --volume "${QEMU_PPC64LE}:${QEMU_PPC64LE}"
                   "${CUDA_VERSION}/runtime/${CUDNN_VERSION}"
    - docker push "${REPOSITORY}:${VERSION}-runtime-${OS}"
    - docker build --pull -t "${REPOSITORY}:${VERSION}-devel-${OS}"
                   --volume "${QEMU_PPC64LE}:${QEMU_PPC64LE}"
                   "${CUDA_VERSION}/devel/${CUDNN_VERSION}"
    - docker push "${REPOSITORY}:${VERSION}-devel-${OS}"
    - if [[ "${NO_OS_SUFFIX}" == true ]]; then
          docker tag "${REPOSITORY}:${VERSION}-runtime-${OS}" "${REPOSITORY}:${VERSION}-runtime";
          docker push "${REPOSITORY}:${VERSION}-runtime";
          docker tag "${REPOSITORY}:${VERSION}-devel-${OS}" "${REPOSITORY}:${VERSION}-devel";
          docker push "${REPOSITORY}:${VERSION}-devel";
      fi

v8.0:
    variables:
        NO_OS_SUFFIX: "true"
        LATEST: "true"
    <<: *cuda_definition

v8.0-cudnn5:
    variables:
        NO_OS_SUFFIX: "true"
    <<: *cudnn_definition

v8.0-cudnn6:
    variables:
        NO_OS_SUFFIX: "true"
    <<: *cudnn_definition

v8.0-cudnn7:
    variables:
        NO_OS_SUFFIX: "true"
    <<: *cudnn_definition
